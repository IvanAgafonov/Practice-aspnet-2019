// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Store_Rating_System_Dev.Models;
using System;

namespace Store_Rating_System_Dev.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190714231309_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("login")
                        .HasMaxLength(50);

                    b.Property<string>("password")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Admin", b =>
                {
                    b.Property<int>("ID");

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<string>("first_name")
                        .HasMaxLength(50);

                    b.Property<string>("last_name")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Category", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.HasKey("name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Moderator", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int?>("Admin_ID");

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<string>("first_name")
                        .HasMaxLength(50);

                    b.Property<string>("last_name")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("Admin_ID");

                    b.ToTable("Moderators");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Rating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Moderator_ID");

                    b.Property<int>("Store_ID");

                    b.Property<int>("User_ID");

                    b.Property<string>("comment")
                        .HasMaxLength(500);

                    b.Property<DateTime>("date_of_publication");

                    b.Property<bool?>("status");

                    b.Property<bool>("value");

                    b.HasKey("ID");

                    b.HasIndex("Moderator_ID");

                    b.HasIndex("Store_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("avarange_rating");

                    b.Property<string>("city")
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<string>("name")
                        .HasMaxLength(50);

                    b.Property<string>("name_Category")
                        .HasMaxLength(50);

                    b.Property<int>("number_of_pos_ratings");

                    b.Property<int>("number_of_ratings");

                    b.Property<string>("url")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("name_Category");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.User", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int?>("Moderator_ID");

                    b.Property<string>("city")
                        .HasMaxLength(50);

                    b.Property<string>("country")
                        .HasMaxLength(50);

                    b.Property<DateTime>("date_of_birth");

                    b.Property<DateTime>("date_of_registration");

                    b.Property<string>("email")
                        .HasMaxLength(50);

                    b.Property<string>("first_name")
                        .HasMaxLength(50);

                    b.Property<bool>("gender");

                    b.Property<string>("last_name")
                        .HasMaxLength(50);

                    b.Property<string>("phone_number");

                    b.Property<bool?>("status");

                    b.HasKey("ID");

                    b.HasIndex("Moderator_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Admin", b =>
                {
                    b.HasOne("Store_Rating_System_Dev.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Moderator", b =>
                {
                    b.HasOne("Store_Rating_System_Dev.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("Admin_ID");

                    b.HasOne("Store_Rating_System_Dev.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Rating", b =>
                {
                    b.HasOne("Store_Rating_System_Dev.Models.Moderator", "Moderator")
                        .WithMany()
                        .HasForeignKey("Moderator_ID");

                    b.HasOne("Store_Rating_System_Dev.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("Store_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Store_Rating_System_Dev.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.Store", b =>
                {
                    b.HasOne("Store_Rating_System_Dev.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("name_Category");
                });

            modelBuilder.Entity("Store_Rating_System_Dev.Models.User", b =>
                {
                    b.HasOne("Store_Rating_System_Dev.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Store_Rating_System_Dev.Models.Moderator", "Moderator")
                        .WithMany()
                        .HasForeignKey("Moderator_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
