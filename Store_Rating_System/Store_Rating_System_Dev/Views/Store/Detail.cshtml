@model Store_with_Ratings

@if (Model == null)
{
    <p>Store not found</p>
}
else
{

    <h4>@Model.store.Name</h4>
    @if (Model.store.Image != null)
    {
        <div class="user_photo">
            <img alt="logo" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.store.Image)" />
        </div>
    }
    else
    {
        <p>No logo</p>
    }

    <p>Category: @Model.store.Category</p>
    <p>Url: @Model.store.Url</p>
    <p>Description: @Model.store.Description</p>
    <p>Country: @Model.store.Country</p>
    <p>City: @Model.store.City</p>
    <p>Number_of_ratings: @Model.store.Number_of_ratings</p>
    <p>Number_of_pos_ratings: @Model.store.Number_of_pos_ratings</p>
    int neg_ratings = Model.store.Number_of_ratings - Model.store.Number_of_pos_ratings;
    <p>Number_of_neg_ratings: @neg_ratings</p>
    <p>Avarange_rating: @Model.store.Avarange_rating</p>

    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAuthenticatedUser")).Succeeded)
    {
        <a asp-action="Rate" class="btn btn-sm btn-primary" asp-route-id="@Model.store.ID">Rate</a>
    }
    <hr />


    foreach (var rating in Model.ratings)
    {
        <article class="form-control">
            @if (rating.Comment != null)
            {
                <p>@rating.Comment</p>
            }
            else
            {
                <p></p>
            }

            @switch(rating.Rate_value)
            {
                case true: <p>Positive</p> break;
                case false: <p>Negative</p> break;
                default: <p></p> break;
            }

            <time>@rating.Date_of_publication</time>
        </article>
        <hr />
    }
}



